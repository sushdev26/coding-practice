class Solution {
    public int numIslands(char[][] grid) {
        int noOfIsland=0;
        int rows=grid.length; 
        int cols=grid[0].length;
        if(rows == 0) return 0;
        for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
                if(grid[i][j] == '1'){
                    mark_current_island(grid,i,j,rows,cols);
                    noOfIsland += 1;
                }
            }
        }
        return noOfIsland;
    }
    
    public void mark_current_island(char[][] grid, int x, int y, int rows,int cols){
        if(x <0 || x >= rows || y < 0 || y >=cols || grid[x][y] != '1')
            return;
        grid[x][y] = '2';
        mark_current_island(grid,x-1,y,rows,cols);
        mark_current_island(grid,x,y-1,rows,cols);
        mark_current_island(grid,x+1,y,rows,cols);
        mark_current_island(grid,x,y+1,rows,cols);
    }
    
}
